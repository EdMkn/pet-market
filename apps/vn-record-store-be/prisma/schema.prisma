// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Album {
  id            String      @id @default(uuid())
  name          String
  artist        String
  description   String
  price         Float
  image         String
  genre         String
  releaseYear   Int
  trackCount    Int
  duration      String      // Format: "45:30" (minutes:seconds)
  stripePriceId String
  isFeatured    Boolean?    @default(false)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  albumOrderItems AlbumOrderItem[]
}

model Order {
  id          String      @id @default(uuid())
  userId      String?
  status      OrderStatus @default(PENDING)
  totalAmount Float
  paymentId   String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  albumItems  AlbumOrderItem[]
}

model AlbumOrderItem {
  id        String  @id @default(uuid())
  orderId   String
  albumId   String
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  album     Album   @relation(fields: [albumId], references: [id])
}

enum OrderStatus {
  PENDING
  STARTED_DELIVERY
  DELIVERED
  PAYMENT_REQUIRED
}
